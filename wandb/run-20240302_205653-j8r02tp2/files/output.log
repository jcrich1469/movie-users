Epoch 0: 100%|████████████████████████████████| 28/28 [00:00<00:00, 1751.14it/s]
Epoch 1: 100%|████████████████████████████████| 28/28 [00:00<00:00, 1958.22it/s]
Epoch 2: 100%|████████████████████████████████| 28/28 [00:00<00:00, 1776.87it/s]
Epoch 3: 100%|████████████████████████████████| 28/28 [00:00<00:00, 1956.10it/s]
Epoch 4: 100%|████████████████████████████████| 28/28 [00:00<00:00, 1554.08it/s]
Epoch 5: 100%|████████████████████████████████| 28/28 [00:00<00:00, 1942.96it/s]
Epoch 6: 100%|████████████████████████████████| 28/28 [00:00<00:00, 2000.08it/s]
Epoch 7: 100%|████████████████████████████████| 28/28 [00:00<00:00, 2105.50it/s]
Epoch 8: 100%|████████████████████████████████| 28/28 [00:00<00:00, 2114.33it/s]
Epoch 9: 100%|████████████████████████████████| 28/28 [00:00<00:00, 2185.55it/s]
Epoch 10: 100%|███████████████████████████████| 28/28 [00:00<00:00, 2152.27it/s]
Epoch 11: 100%|███████████████████████████████| 28/28 [00:00<00:00, 2162.29it/s]
Epoch 12: 100%|███████████████████████████████| 28/28 [00:00<00:00, 2156.93it/s]
Epoch 13: 100%|███████████████████████████████| 28/28 [00:00<00:00, 2034.41it/s]
Epoch 14: 100%|███████████████████████████████| 28/28 [00:00<00:00, 2110.00it/s]
Epoch 15: 100%|███████████████████████████████| 28/28 [00:00<00:00, 1563.46it/s]
Epoch 16: 100%|███████████████████████████████| 28/28 [00:00<00:00, 1971.50it/s]
Epoch 17: 100%|███████████████████████████████| 28/28 [00:00<00:00, 2131.87it/s]
Epoch 18: 100%|███████████████████████████████| 28/28 [00:00<00:00, 2093.86it/s]
Epoch 19: 100%|███████████████████████████████| 28/28 [00:00<00:00, 2115.66it/s]
Epoch 20: 100%|███████████████████████████████| 28/28 [00:00<00:00, 2194.78it/s]
Epoch 21: 100%|███████████████████████████████| 28/28 [00:00<00:00, 2137.26it/s]
Epoch 22: 100%|███████████████████████████████| 28/28 [00:00<00:00, 2135.13it/s]
Epoch 23: 100%|███████████████████████████████| 28/28 [00:00<00:00, 2012.04it/s]
Epoch 24: 100%|███████████████████████████████| 28/28 [00:00<00:00, 2171.13it/s]
/tmp/ipykernel_80318/2932596466.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  ranked_users = torch.argsort(torch.tensor(user_similarities[i]), descending=True)
tensor([[ 6.9502,  6.5007,  3.2833,  ...,  8.6531,  6.2702,  6.7301],
        [ 8.0132,  7.5637,  4.3463,  ...,  9.7161,  7.3332,  7.7931],
        [ 7.5011,  7.0516,  3.8342,  ...,  9.2040,  6.8211,  7.2810],
        ...,
        [ 9.3542,  8.9047,  5.6873,  ..., 11.0571,  8.6742,  9.1341],
        [ 9.5474,  9.0980,  5.8806,  ..., 11.2504,  8.8675,  9.3273],
        [ 5.9167,  5.4673,  2.2498,  ...,  7.6196,  5.2367,  5.6966]])
tensor([[  -inf, 0.9994, 0.9998,  ..., 0.9978, 0.9976, 0.9990],
        [0.9994,   -inf, 0.9999,  ..., 0.9995, 0.9994, 0.9968],
        [0.9998, 0.9999,   -inf,  ..., 0.9989, 0.9987, 0.9979],
        ...,
        [0.9978, 0.9995, 0.9989,  ...,   -inf, 1.0000, 0.9938],
        [0.9976, 0.9994, 0.9987,  ..., 1.0000,   -inf, 0.9933],
        [0.9990, 0.9968, 0.9979,  ..., 0.9938, 0.9933,   -inf]])
SELECT * FROM Reviews
SELECT * FROM Users
SELECT * FROM Movies
SELECT * FROM Users
SELECT * FROM Movies